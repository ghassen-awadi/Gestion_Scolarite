<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>